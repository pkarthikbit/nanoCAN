#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>        
#include <mcp2515.h> 

// General Declaration
#define FALSE 0
#define TRUE !FALSE
/****************************************************************************************************/
#define NANOCAN_MENUCOUNT 6
#define NANOCAN_GREETINGMENUCNT 10
/****************************************************************************************************/
// Declaration for OLED
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
/****************************************************************************************************/

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
/****************************************************************************************************/

// Declaration for LOGO
const unsigned char myBitmap [] PROGMEM = {
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x9f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x7f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfc, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xf9, 0xff, 0xff, 0x3f, 0xff, 0xe0, 0x0f, 0xff, 0x83, 0xff, 0x81, 0xff, 0xc0, 0xfc, 0x3f, 0x87, 
  0xf3, 0x9f, 0xf3, 0x9f, 0xff, 0xe0, 0x01, 0xfe, 0x00, 0xfe, 0x00, 0x7f, 0x00, 0x3c, 0x3f, 0x07, 
  0xf7, 0x1f, 0xf1, 0xdf, 0xff, 0xe0, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x3e, 0x00, 0x1c, 0x3f, 0x07, 
  0xee, 0xdf, 0xf6, 0xef, 0xff, 0xe0, 0x00, 0x78, 0x00, 0x3c, 0x08, 0x3c, 0x00, 0x0c, 0x3f, 0x07, 
  0xee, 0xdf, 0xf6, 0xef, 0xff, 0xe1, 0xf0, 0x70, 0x38, 0x1c, 0x3e, 0x7c, 0x1e, 0x3c, 0x3f, 0x07, 
  0xdd, 0xd0, 0x17, 0x77, 0xff, 0xe1, 0xf8, 0x70, 0xfc, 0x1c, 0x3f, 0xf8, 0x3f, 0x7c, 0x3f, 0x07, 
  0xdd, 0xdf, 0xf7, 0x77, 0xff, 0xe1, 0xf0, 0x70, 0xfe, 0x1c, 0x1f, 0xf8, 0x7f, 0xfc, 0x3f, 0x07, 
  0xdd, 0xdf, 0xf7, 0x77, 0xff, 0xe0, 0x00, 0xe0, 0xfe, 0x1c, 0x03, 0xf8, 0x7f, 0xfc, 0x00, 0x07, 
  0xdb, 0xdf, 0xf7, 0xb7, 0xff, 0xe0, 0x01, 0xe1, 0xff, 0x0e, 0x00, 0x78, 0x7f, 0xfc, 0x00, 0x07, 
  0xdb, 0xdf, 0xf7, 0xb7, 0xff, 0xe0, 0x00, 0xe1, 0xff, 0x0f, 0x00, 0x38, 0x7f, 0xfc, 0x00, 0x07, 
  0xdb, 0xdf, 0xf7, 0xb7, 0xff, 0xe0, 0x00, 0x60, 0xfe, 0x0f, 0xe0, 0x18, 0x7f, 0xfc, 0x00, 0x07, 
  0xdd, 0xdf, 0xf7, 0x77, 0xff, 0xe1, 0xf8, 0x70, 0xfe, 0x1f, 0xfc, 0x18, 0x7f, 0xfc, 0x3f, 0x07, 
  0xdd, 0xc0, 0x07, 0x77, 0xff, 0xe1, 0xf8, 0x70, 0xfe, 0x1f, 0xfe, 0x18, 0x3f, 0x7c, 0x3f, 0x07, 
  0xec, 0xdf, 0xf6, 0x6f, 0xff, 0xe1, 0xf8, 0x70, 0x7c, 0x1c, 0x7c, 0x1c, 0x1e, 0x3c, 0x3f, 0x07, 
  0xee, 0xdf, 0xf6, 0xef, 0xff, 0xe0, 0x00, 0x78, 0x00, 0x38, 0x18, 0x1c, 0x00, 0x0c, 0x3f, 0x07, 
  0xf7, 0x1f, 0xf1, 0xdf, 0xff, 0xe0, 0x00, 0x78, 0x00, 0x38, 0x00, 0x3e, 0x00, 0x1c, 0x3f, 0x07, 
  0xf7, 0x9f, 0xf3, 0xdf, 0xff, 0xe0, 0x00, 0xfc, 0x00, 0x7c, 0x00, 0x7f, 0x00, 0x3c, 0x3f, 0x07, 
  0xfb, 0xff, 0xff, 0xbf, 0xff, 0xe0, 0x03, 0xff, 0x01, 0xff, 0x01, 0xff, 0x80, 0x7c, 0x3f, 0x07, 
  0xfd, 0xff, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xfe, 0x7f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0x1f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
/****************************************************************************************************/
String disp_greetingmenu[NANOCAN_GREETINGMENUCNT] = {
"x: ",
"x1: ",
"x2: ",
"x3: ",
"x4: ",
"x5: ",
"x6: ",
"x7: ",
"x8: ",
"x9: "
};
/****************************************************************************************************/

// Declaration for Timer
struct timer_struct
{
  boolean st_timer;
  unsigned long t_startTime;
};

//Start timer
void start_timer(timer_struct *timerX)
{
  if(timerX->st_timer == FALSE)
  {
    timerX->t_startTime = millis();
    timerX->st_timer = TRUE; 
  }
}

//Stop timer
void stop_timer(timer_struct *timerX)
{
  timerX->t_startTime = 0;
  timerX->st_timer = FALSE;
}

//Get timer
unsigned long get_timer(timer_struct *timerX)
{
  return(millis() - timerX->t_startTime);
}
/****************************************************************************************************/
